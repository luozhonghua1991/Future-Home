//
//  PrefixHeader.pch
//  FutureHome
//
//  Created by 同熙传媒 on 2019/6/24.
//  Copyright © 2019 同熙传媒. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

#ifdef DEBUG        //调试状态,打开LOG功能
#define ZHLog(...) NSLog(__VA_ARGS__)
#define ZHFunc GJLog(@"%s",__func__);           //输出当前类的方法名称
#else       //发布状态,关闭LOG功能
#define ZHLog(...)
#define ZHFunc
#endif

//pch
#import "ColorHeader.h"
#import "InterfaceHeader.h"
#import "Masonry.h"
#import "UIColor-Expanded.h"
#import "UIView+Toast.h"
#import "UIColor+Extend.h"
//#import"UIControl+UIControl_buttonCon.h"
/** 常用工具 */
#import "MJRefresh.h"
#import "UIScrollView+EmptyDataSet.h"
#import "MBProgressHUD.h"
#import "UIImageView+WebCache.h"
#import "UIView+Extend.h"
#import "UIlabelTool.h"
#import "BHInfiniteScrollView.h"
#import "YPTabbarController.h"
#import "FHBaseTabbarController.h"
#import "CurrentViewController.h"
#import "ZHProgressHUD.h"
#import "AFNetWorkTool.h"
#import "Header.h"
#import "AccountStorage.h"
#import "Account.h"
#import <RongIMKit/RongIMKit.h>
/** 二维码生成工具 */
#import "SGQRCode.h"

//获取当前屏幕的宽高
#define kScreenWidth [UIScreen mainScreen].bounds.size.width
#define SCREEN_WIDTH [UIScreen mainScreen].bounds.size.width
#define SCREEN_HEIGHT [UIScreen mainScreen].bounds.size.height
#define kScreenHeight [UIScreen mainScreen].bounds.size.height
#define TABBAR_HEIGHT KIsiPhoneX ? 83 : 49;
//获取状态栏高度
#define MainStatusBarHeight ([[UIApplication sharedApplication]statusBarFrame].size.height)
//获取导航栏高度
#define MainNavgationBarHeight ([UINavigationController new].navigationBar.height)
/**导航栏高度 + 状态栏的总高度*/
#define MainSizeHeight ([[UIApplication sharedApplication]statusBarFrame].size.height + [UINavigationController new].navigationBar.height)

#define KIsiPhoneX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)

//iPHoneXr
#define IS_IPHONE_Xr ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size)  : NO)

//iPhoneXs
#define IS_IPHONE_Xs ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size)  : NO)

//­iPhoneXs Max
#define IS_IPHONE_Xs_Max ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size)  : NO)

//16进制色值参数转换
#define UIColorFromRGB(rgbValue) [UIColor \
colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 \
green:((float)((rgbValue & 0xFF00) >> 8))/255.0 \
blue:((float)(rgbValue & 0xFF))/255.0 alpha:1.0]
//16进制转RGB 颜色
#define HEX_COLOR(h)  [UIColor colorWithRGBHex:(h)]
#define COLOR_16F(hexValue,alphaValue) [UIColor colorWithRed:((float)((hexValue & 0xFF0000) >> 16))/255.0 green:((float)((hexValue & 0xFF00) >> 8))/255.0 blue:((float)(hexValue & 0xFF))/255.0 alpha:alphaValue]
//判断数组是否为空
#define IS_NULL_ARRAY(array) ([array isKindOfClass:[NSNull class]] || array == nil || array.count == 0)
//判断字符串是否为空
#define IsStringEmpty(string)           (!string || [@"" isEqualToString:string])
//判断字典是否为空
#define IS_NULL_DIC(dic) ([dic isEqual:[NSNull null]] || dic == nil || dic.count == 0)

#define DEFULT_TITLE_COLOR    [UIColor whiteColor]

#define RGBHexColor(hexValue, alphaValue) [UIColor colorWithRed:((float)((hexValue & 0xFF0000) >> 16))/255.0 green:((float)((hexValue & 0xFF00) >> 8))/255.0 blue:((float)(hexValue & 0xFF))/255.0 alpha:alphaValue]
#define RGBA(r,g,b,a) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:a]
// Views
#define SCREEN_WIDTH ([UIScreen mainScreen].bounds.size.width)
#define SCREEN_HEIGHT ([UIScreen mainScreen].bounds.size.height)
//iPhone X底部边距
#define STATUS_BAR_HIGHT CGRectGetHeight([UIApplication sharedApplication].statusBarFrame)
#define SAFE_AREA_BOTTOM (STATUS_BAR_HIGHT > 20 ? 34.0 : 0.0)
#define RONGCLOUDAPPKEY @"bmdehs6pbaqis"

// block
#define weakify(var) \
try {} @catch (...) {} \
__weak __typeof__(var) var ## _weak = var;


#define strongify(var) \
try {} @catch (...) {} \
__strong __typeof__(var) var = var ## _weak;

/**
 *  计算等比长宽
 */
#define MinX(v) CGRectGetMinX((v).frame)
#define MinY(v) CGRectGetMinY((v).frame)
#define MidX(v) CGRectGetMidX((v).frame)
#define MidY(v) CGRectGetMidY((v).frame)
#define MaxX(v) CGRectGetMaxX((v).frame)
#define MaxY(v) CGRectGetMaxY((v).frame)

#define ZH_SCALE_SCREEN_Width(winthNumber)  (SCREEN_WIDTH*((winthNumber)/(375.0)))
#define ZH_SCALE_SCREEN_Height(winthNumber)  (SCREEN_HEIGHT*((winthNumber)/(667.0)))
#define WCX_SCALE_SCREEN_Width(winthNumber)  (SCREEN_WIDTH*((winthNumber)/(375.0)))
#define WCX_SCALE_SCREEN_Height(winthNumber)  (SCREEN_HEIGHT*((winthNumber)/(667.0)))
//颜色RGB值
#define ZH_COLOR(r,g,b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1]
//系统版本号
#define SYSTEM_VERSION [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"]
//weak self
#define WEAK_SELF(weakSelf)  __weak __typeof(&*self)weakSelf = self;
#define WEAK_SELF_OBJC(weakSelf,objc)  __weak __typeof(&*objc)weakSelf = objc;
#define WS(weakSelf)  __weak __typeof(&*self)weakSelf = self;

#endif /* PrefixHeader_pch */
